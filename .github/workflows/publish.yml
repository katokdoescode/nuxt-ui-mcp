name: Publish Package

on:
  push:
    paths:
      - 'package.json'
    branches:
      - main
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Grant write access to repository contents
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure jq is installed
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          git fetch --tags
          if git rev-parse "v${{ steps.get_version.outputs.version }}" >/dev/null 2>&1; then
            echo "Tag exists"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag does not exist"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create tag and push
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag v${{ steps.get_version.outputs.version }}
          git push origin v${{ steps.get_version.outputs.version }}

      - name: Publish to npm
        if: steps.check_tag.outputs.exists == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          generate_release_notes: true
